{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar url = 'https://api.rasp.yandex.net/v3.0/search/?apikey=4947ef3f-adeb-4221-93ec-743762d9d209&format=json&from=c146&to=c213&lang=ru_RU&page=1&date=2041-11-29';\nvar proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // асинхронная функция для запроса к серверу\n\nvar getResourse =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var res, body;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(url);\n\n          case 2:\n            res = _context.sent;\n\n            if (res.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"Could not fetch \".concat(url) + \", Received status: \".concat(res.status));\n\n          case 5:\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            body = _context.sent;\n            return _context.abrupt(\"return\", body);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getResourse(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // как только ресурс будет доступен, мы получаем тело\n// и печатаем его в консоль\n\n\ngetResourse(proxyurl + url).then(function (body) {\n  console.log(body);\n}).catch(function (err) {\n  console.error(err);\n});\n\nvar YandexPlanesShedule =\n/*#__PURE__*/\nfunction () {\n  function YandexPlanesShedule() {\n    _classCallCheck(this, YandexPlanesShedule);\n\n    this._apiBase = 'https://cors-anywhere.herokuapp.com/https://api.rasp.yandex.net/v3.0/search/?apikey=4947ef3f-adeb-4221-93ec-743762d9d209&format=json&';\n  }\n\n  _createClass(YandexPlanesShedule, [{\n    key: \"getResourse\",\n    value: function () {\n      var _getResourse = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.ok) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Could not fetch \".concat(url) + \", Received status: \".concat(res.status));\n\n              case 5:\n                _context2.next = 7;\n                return res.json();\n\n              case 7:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getResourse() {\n        return _getResourse.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getAllFlights\",\n    value: function getAllFlights() {\n      return this.getResourse(\"from=c146&to=c213&lang=ru_RU&transport_types=plane\");\n    }\n  }]);\n\n  return YandexPlanesShedule;\n}();","map":{"version":3,"sources":["/Users/admin/Desktop/flights/src/index.js"],"names":["url","proxyurl","getResourse","fetch","res","ok","Error","status","json","body","then","console","log","catch","err","error","YandexPlanesShedule","_apiBase"],"mappings":";;;;AACA,IAAMA,GAAG,GAAG,sJAAZ;AACA,IAAMC,QAAQ,GAAG,sCAAjB,C,CAEA;;AACA,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOF,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKDG,KAAK,CAACH,GAAD,CALJ;;AAAA;AAKbI,YAAAA,GALa;;AAAA,gBAOdA,GAAG,CAACC,EAPU;AAAA;AAAA;AAAA;;AAAA,kBAQZ,IAAIC,KAAJ,CAAU,0BAAmBN,GAAnB,iCACMI,GAAG,CAACG,MADV,CAAV,CARY;;AAAA;AAAA;AAAA,mBAaAH,GAAG,CAACI,IAAJ,EAbA;;AAAA;AAabC,YAAAA,IAba;AAAA,6CAeZA,IAfY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXP,WAAW;AAAA;AAAA;AAAA,GAAjB,C,CAkBA;AACA;;;AACAA,WAAW,CAACD,QAAQ,GAAGD,GAAZ,CAAX,CACEU,IADF,CACO,UAACD,IAAD,EAAU;AACfE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,CAHF,EAIEI,KAJF,CAIQ,UAACC,GAAD,EAAS;AACfH,EAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,CANF;;IAYME,mB;;;;;;SAELC,Q,GAAW,uI;;;;;;;;;;;;;;;uBAGQd,KAAK,WAAI,KAAKc,QAAT,SAAoBjB,GAApB,E;;;AAAjBI,gBAAAA,G;;oBAEDA,GAAG,CAACC,E;;;;;sBACF,IAAIC,KAAJ,CAAU,0BAAmBN,GAAnB,iCACMI,GAAG,CAACG,MADV,CAAV,C;;;;uBAGMH,GAAG,CAACI,IAAJ,E;;;;;;;;;;;;;;;;;;;oCAGE;AACf,aAAO,KAAKN,WAAL,sDAAP;AACA","sourcesContent":["\nconst url = 'https://api.rasp.yandex.net/v3.0/search/?apikey=4947ef3f-adeb-4221-93ec-743762d9d209&format=json&from=c146&to=c213&lang=ru_RU&page=1&date=2041-11-29';\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n// асинхронная функция для запроса к серверу\nconst getResourse = async (url) => {\n\t// ждать пока результат промиса не будет доступен\n\t// fetch возвращает промис, await говорит, что мы будем ждать \n\t// пока результат промиса не станет доступным, \n\t// как только результат будет доступен, запишем его в res\n\tconst res = await fetch(url);\n\n\tif (!res.ok) {\n\t\tthrow new Error(`Could not fetch ${url}` +\n\t\t`, Received status: ${res.status}`);\n\t}\n\n\t// точно таким же способом достаем тело ответа\n\tconst body = await res.json();\n\t// затем возвращем результат\n\treturn body;\n};\n\n// как только ресурс будет доступен, мы получаем тело\n// и печатаем его в консоль\ngetResourse(proxyurl + url)\n\t.then((body) => {\n\t\tconsole.log(body);\n\t})\n\t.catch((err) => {\n\t\tconsole.error(err);\n\t});\n\n\n\n\n\nclass YandexPlanesShedule {\n\n\t_apiBase = 'https://cors-anywhere.herokuapp.com/https://api.rasp.yandex.net/v3.0/search/?apikey=4947ef3f-adeb-4221-93ec-743762d9d209&format=json&';\n\t\n\tasync getResourse() {\n\t\tconst res = await fetch(`${this._apiBase}${url}`);\n\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(`Could not fetch ${url}` +\n\t\t\t`, Received status: ${res.status}`);\n\t\t}\n\t\treturn await res.json();\n\t}\n\n\tgetAllFlights() {\n\t\treturn this.getResourse(`from=c146&to=c213&lang=ru_RU&transport_types=plane`);\n\t}\n\n\n}\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}