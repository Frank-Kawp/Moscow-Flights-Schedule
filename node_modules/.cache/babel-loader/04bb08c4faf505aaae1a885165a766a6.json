{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/flights/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar YandexFlightsShedule =\n/*#__PURE__*/\nfunction () {\n  function YandexFlightsShedule() {\n    _classCallCheck(this, YandexFlightsShedule);\n\n    this._apiBase = 'https://cors-anywhere.herokuapp.com/https://api.rasp.yandex.net/v3.0/schedule/?apikey=4947ef3f-adeb-4221-93ec-743762d9d209&';\n    this._nextID = 1001;\n  }\n\n  _createClass(YandexFlightsShedule, [{\n    key: \"getResourse\",\n    value: function () {\n      var _getResourse = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Could not fetch \".concat(url) + \", Received status: \".concat(res.status));\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getResourse(_x) {\n        return _getResourse.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getArrivals\",\n    value: function () {\n      var _getArrivals = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getResourse(\"station=s9600213&transport_types=plane&event=arrival\");\n\n              case 2:\n                res = _context2.sent;\n                _context2.next = 5;\n                return this._transformFlights(res);\n\n              case 5:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getArrivals() {\n        return _getArrivals.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getDepartures\",\n    value: function () {\n      var _getDepartures = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getResourse(\"station=s9600213&transport_types=plane&event=departure\");\n\n              case 2:\n                res = _context3.sent;\n                _context3.next = 5;\n                return this._transformFlights(res);\n\n              case 5:\n                result = _context3.sent;\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getDepartures() {\n        return _getDepartures.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"_transformFlights\",\n    value: function _transformFlights(apiData) {\n      var _this = this;\n\n      var event = apiData.event === 'arrival' ? 'Ближашее прибытие' : 'Ближайший вылет';\n      var coll = apiData.schedule.slice();\n      var newArray = coll.map(function (item) {\n        var arrival = item.arrival,\n            departure = item.departure,\n            days = item.days,\n            _item$thread = item.thread,\n            direction = _item$thread.title,\n            flight = _item$thread.number,\n            vehicle = _item$thread.vehicle,\n            carrier = _item$thread.carrier.title;\n        var time = arrival ? arrival : departure;\n        var id = _this._nextID += 1;\n        return {\n          id: id,\n          event: event,\n          time: time,\n          direction: direction,\n          flight: flight,\n          carrier: carrier,\n          vehicle: vehicle,\n          days: 'Расписание: ' + days.length > 150 ? days.slice(0, 59 - 3) + '...' : days\n        };\n      });\n      return newArray;\n    }\n  }]);\n\n  return YandexFlightsShedule;\n}();\n\nexport { YandexFlightsShedule as default };\n;","map":{"version":3,"sources":["/Users/admin/Desktop/flights/src/services/yandex-flights-shedule.js"],"names":["YandexFlightsShedule","_apiBase","_nextID","url","fetch","res","ok","Error","status","json","getResourse","_transformFlights","result","apiData","event","coll","schedule","slice","newArray","map","item","arrival","departure","days","thread","direction","title","flight","number","vehicle","carrier","time","id","length"],"mappings":";;;;;IAAqBA,oB;;;;;;SACpBC,Q,GAAW,6H;SACXC,O,GAAU,I;;;;;;;;gDAEQC,G;;;;;;;uBACCC,KAAK,WAAI,KAAKH,QAAT,SAAoBE,GAApB,E;;;AAAjBE,gBAAAA,G;;oBAEDA,GAAG,CAACC,E;;;;;sBACF,IAAIC,KAAJ,CAAU,0BAAmBJ,GAAnB,iCACME,GAAG,CAACG,MADV,CAAV,C;;;;uBAGMH,GAAG,CAACI,IAAJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIK,KAAKC,WAAL,wD;;;AAAZL,gBAAAA,G;;uBACe,KAAKM,iBAAL,CAAuBN,GAAvB,C;;;AAAfO,gBAAAA,M;kDACCA,M;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIW,KAAKF,WAAL,0D;;;AAAZL,gBAAAA,G;;uBACe,KAAKM,iBAAL,CAAuBN,GAAvB,C;;;AAAfO,gBAAAA,M;kDACCA,M;;;;;;;;;;;;;;;;sCAGUC,O,EAAS;AAAA;;AAC1B,UAAMC,KAAK,GAAGD,OAAO,CAACC,KAAR,KAAkB,SAAlB,GAA8B,mBAA9B,GAAoD,iBAAlE;AACA,UAAMC,IAAI,GAAGF,OAAO,CAACG,QAAR,CAAiBC,KAAjB,EAAb;AAEA,UAAMC,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAAS,UAACC,IAAD,EAAU;AAAA,YAC3BC,OAD2B,GAGED,IAHF,CAC3BC,OAD2B;AAAA,YAClBC,SADkB,GAGEF,IAHF,CAClBE,SADkB;AAAA,YACPC,IADO,GAGEH,IAHF,CACPG,IADO;AAAA,2BAGEH,IAHF,CAEjCI,MAFiC;AAAA,YAEhBC,SAFgB,gBAEvBC,KAFuB;AAAA,YAEGC,MAFH,gBAELC,MAFK;AAAA,YAEWC,OAFX,gBAEWA,OAFX;AAAA,YAGdC,OAHc,gBAGhCA,OAHgC,CAGrBJ,KAHqB;AAKnC,YAAMK,IAAI,GAAGV,OAAO,GAAGA,OAAH,GAAaC,SAAjC;AACA,YAAMU,EAAE,GAAG,KAAI,CAAC9B,OAAL,IAAgB,CAA3B;AAEA,eAAO;AAAE8B,UAAAA,EAAE,EAAFA,EAAF;AAAMlB,UAAAA,KAAK,EAALA,KAAN;AAAaiB,UAAAA,IAAI,EAAJA,IAAb;AAAmBN,UAAAA,SAAS,EAATA,SAAnB;AAA8BE,UAAAA,MAAM,EAANA,MAA9B;AAAsCG,UAAAA,OAAO,EAAPA,OAAtC;AAA+CD,UAAAA,OAAO,EAAPA,OAA/C;AACNN,UAAAA,IAAI,EAAE,iBAAiBA,IAAI,CAACU,MAAtB,GAA+B,GAA/B,GAAqCV,IAAI,CAACN,KAAL,CAAW,CAAX,EAAc,KAAK,CAAnB,IAAwB,KAA7D,GAAqEM;AADrE,SAAP;AAEA,OAVgB,CAAjB;AAWA,aAAOL,QAAP;AACA;;;;;;SA1CmBlB,oB;AA2CpB","sourcesContent":["export default class YandexFlightsShedule {\n\t_apiBase = 'https://cors-anywhere.herokuapp.com/https://api.rasp.yandex.net/v3.0/schedule/?apikey=4947ef3f-adeb-4221-93ec-743762d9d209&';\n\t_nextID = 1001;\n\n\tasync getResourse(url) {\n\t\tconst res = await fetch(`${this._apiBase}${url}`);\n\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(`Could not fetch ${url}` +\n\t\t\t`, Received status: ${res.status}`);\n\t\t}\n\t\treturn await res.json();\n\t};\n\n\tasync getArrivals() {\n\t\tconst res = await this.getResourse(`station=s9600213&transport_types=plane&event=arrival`);\n\t\tconst result = await this._transformFlights(res);\n\t\treturn result;\n\t};\n\n\tasync getDepartures() {\n\t\tconst res = await this.getResourse(`station=s9600213&transport_types=plane&event=departure`);\n\t\tconst result = await this._transformFlights(res);\n\t\treturn result;\n\t};\n\n\t_transformFlights(apiData) {\n\t\tconst event = apiData.event === 'arrival' ? 'Ближашее прибытие' : 'Ближайший вылет';\n\t\tconst coll = apiData.schedule.slice();\n\n\t\tconst newArray = coll.map((item) => {\n\t\t\tconst { arrival, departure, days,\n\t\t\t\t\tthread: { title: direction, number: flight, vehicle,\n\t\t\t\t\t\tcarrier: { title: carrier } } } = item;\n\n\t\t\tconst time = arrival ? arrival : departure;\n\t\t\tconst id = this._nextID += 1;\n\n\t\t\treturn { id, event, time, direction, flight, carrier, vehicle,\n\t\t\t\tdays: 'Расписание: ' + days.length > 150 ? days.slice(0, 59 - 3) + '...' : days }\n\t\t});\n\t\treturn newArray;\n\t}\n};\n\n\n"]},"metadata":{},"sourceType":"module"}